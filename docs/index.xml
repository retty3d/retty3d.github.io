<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on れてぃのーと</title>
    <link>https://retty3d.github.io/</link>
    <description>Recent content in Home on れてぃのーと</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Tue, 25 Apr 2023 17:20:50 +0900</lastBuildDate>
    
	<atom:link href="https://retty3d.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Setup</title>
      <link>https://retty3d.github.io/wsl/ubuntu2004/setup/</link>
      <pubDate>Tue, 25 Apr 2023 21:26:00 +0900</pubDate>
      
      <guid>https://retty3d.github.io/wsl/ubuntu2004/setup/</guid>
      <description>WSL2 Ubuntu20.04 環境構築 1. 基本設定 $ cd ~ $ sudo apt update $ sudo apt install -y \ git \ neovim \ zsh $ mkdir .ssh $ mkdir -p src/github.com/$USERNAME # 開発用ディレクトリ作成 $ ssh-keygen -t ed25519 -C &amp;#34;mail@example.com&amp;#34; # 鍵ファイル名はgithub $ cat github.pub # コピーしてgithubのssh鍵に登録 $ nvim ~/.ssh/config # -&amp;gt; appendix-1を参照 $ chmod 700 ~/.ssh $ chmod 600 ~/.ssh/config $ ssh -T github.com # github疎通確認 $ git clone github.com:retty3d/dotfiles.git ~/dotfiles $ cd ~/dotfiles $ .</description>
    </item>
    
    <item>
      <title>Caesar Cipher</title>
      <link>https://retty3d.github.io/python/cookbook/caesar-cipher/</link>
      <pubDate>Tue, 25 Apr 2023 20:10:59 +0900</pubDate>
      
      <guid>https://retty3d.github.io/python/cookbook/caesar-cipher/</guid>
      <description>シーザー暗号 シーザー暗号- Wikipedia
エンコーダー実装例 def caesar_encrypt(plaintext, shift): ciphertext = &amp;#34;&amp;#34; for char in plaintext: if char.isalpha(): if char.isupper(): ciphertext += chr((ord(char) - 65 + shift) % 26 + 65) else: ciphertext += chr((ord(char) - 97 + shift) % 26 + 97) else: ciphertext += char return ciphertext デコーダー実装例 def caesar_decrypt(ciphertext, shift): plaintext = &amp;#34;&amp;#34; for char in ciphertext: if char.isalpha(): if char.isupper(): plaintext += chr((ord(char) - 65 - shift) % 26 + 65) else: plaintext += chr((ord(char) - 97 - shift) % 26 + 97) else: plaintext += char return plaintext 解説   isalpha()はPythonの文字列メソッドの一つで、与えられた文字列がアルファベットのみで構成されているかどうかを判定するために使用されます。</description>
    </item>
    
    <item>
      <title>Level2 Write-ups</title>
      <link>https://retty3d.github.io/ctf/cpawctf/level2/</link>
      <pubDate>Tue, 25 Apr 2023 17:47:48 +0900</pubDate>
      
      <guid>https://retty3d.github.io/ctf/cpawctf/level2/</guid>
      <description>[Stego]隠されたフラグ 画像をダウンロードし拡大してみると画像の端にモールス信号が書かれており、これを翻訳したものがフラグになる。
[Web] Redirect [Network+Forensic]HTTP Traffic [Recon]Who am I ? [Forensic]leaf in forest [Misc]Image! [Crypto]Block Cipher [Reversing]reversing easy! [Web]Baby&amp;rsquo;s SQLi - Stage 1- [Network] Can you login？ </description>
    </item>
    
    <item>
      <title>os</title>
      <link>https://retty3d.github.io/python/libraries/os/</link>
      <pubDate>Tue, 25 Apr 2023 17:24:39 +0900</pubDate>
      
      <guid>https://retty3d.github.io/python/libraries/os/</guid>
      <description>import os </description>
    </item>
    
    <item>
      <title>Level1 Write-ups</title>
      <link>https://retty3d.github.io/ctf/cpawctf/level1/</link>
      <pubDate>Tue, 25 Apr 2023 16:57:13 +0900</pubDate>
      
      <guid>https://retty3d.github.io/ctf/cpawctf/level1/</guid>
      <description>[Misc] Test Problem Flagを問題文からコピー・ペースト。
[Crypto] Classical Cipher 問題文のシーザー暗号をdecryptするだけ。 参考: caesar-cipher
[Reversing] Can you execute 問題ページからexec_meをダウンロードし、Linuxのfileコマンドでファイルの形式を調べると、x86_64アーキテクチャのプロセッサを搭載し、GNU/Linux 2.6.24以上のカーネルを実行している環境で実行できることがわかる。
&amp;gt; file exec_me exec_me: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.24 適切な環境でexec_meを実行するとフラグを得られる。
追加情報
readelf -hを利用することでバイナリに含まれるヘッダ情報を表示することが可能。
[Misc] Can you open this file 問題ページからopen_meをダウンロードし、Linuxのfileコマンドでファイルの形式を調べると、Microsoft Office Wordで作成されたファイルであることがわかる。拡張子を.docなどに変更して開くとフラグを得られる。
&amp;gt; file open_me open_me: Composite Document File V2 Document, Little Endian, Os: Windows, Version 10.0, Code page: 932, Author: v, Template: Normal.dotm, Last Saved By: v, Revision Number: 1, Name of Creating Application: Microsoft Office Word, Total Editing Time: 28:00, Create Time/Date: Mon Oct 12 04:27:00 2015, Last Saved Time/Date: Mon Oct 12 04:55:00 2015, Number of Pages: 1, Number of Words: 3, Number of Characters: 23, Security: 0 [Web] HTML Page Chrome Dev Toolなどでソースコードを表示し、cpawなどで検索するとフラグを得られる。</description>
    </item>
    
  </channel>
</rss>